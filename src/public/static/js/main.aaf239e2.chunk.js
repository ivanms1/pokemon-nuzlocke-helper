(window["webpackJsonpnuzlocke-helper"]=window["webpackJsonpnuzlocke-helper"]||[]).push([[0],{10:function(e,n,a){e.exports={BackButton:"Nuzlocke_BackButton__1tbve",Nuzlocke:"Nuzlocke_Nuzlocke__3sojL",Header:"Nuzlocke_Header__2uR40",Pokemons:"Nuzlocke_Pokemons__A4gC4",TeamGrid:"Nuzlocke_TeamGrid__1ffbE",empty:"Nuzlocke_empty__xYGA1",TeamPokemon:"Nuzlocke_TeamPokemon__2-eep",TooltipWrapper:"Nuzlocke_TooltipWrapper__3E2VY",PartnerImage:"Nuzlocke_PartnerImage__33bR-",AddNewPokemon:"Nuzlocke_AddNewPokemon__2_2kP",AddNewPokemonContainer:"Nuzlocke_AddNewPokemonContainer__2lVCq",AddNewPokemonForm:"Nuzlocke_AddNewPokemonForm__1uuxO",LocationFields:"Nuzlocke_LocationFields__OKVcA",CustomLocationInput:"Nuzlocke_CustomLocationInput__2XPxF",LocationCheckbox:"Nuzlocke_LocationCheckbox__1CKCm",NicknameInput:"Nuzlocke_NicknameInput__hsnTL",SubmitButton:"Nuzlocke_SubmitButton__OhUW9",SeenPokemon:"Nuzlocke_SeenPokemon__7xoqo",Encounters:"Nuzlocke_Encounters__2ywY4",Encounter:"Nuzlocke_Encounter__1CPjR",EditPokemonForm:"Nuzlocke_EditPokemonForm__3SiNK"}},129:function(e,n,a){e.exports={LoginPage:"Login_LoginPage__3kKRJ",LoginForm:"Login_LoginForm__3fpzB"}},132:function(e,n,a){e.exports={Register:"Register_Register__PAeNT",RegisterForm:"Register_RegisterForm__1xZ2B"}},201:function(e,n,a){e.exports={Select:"Select_Select__1fyIr"}},202:function(e,n,a){e.exports={ItemIcon:"CustomSelect_ItemIcon___t5sB"}},218:function(e,n,a){e.exports=a(407)},406:function(e,n,a){},407:function(e,n,a){"use strict";a.r(n);var i=a(0),t=a.n(i),r=a(27),o=a.n(r),l=a(33),m=a(40),d=a(41),c=a(63),s=a(81),u=a.n(s),k=function(){var e=Object(d.g)();return t.a.createElement("div",{className:u.a.Home},t.a.createElement(c.b,{type:"button",icon:"log-in",minimal:!0,className:u.a.LoginButton,onClick:function(){return e.push("/login")}},"Login"),t.a.createElement("div",{className:u.a.ActionBox},t.a.createElement("h1",null,"Welcome to the Pokemon Nuzlocke helper"),t.a.createElement("span",null,"Track and manage your team and encounters, prevent using illegal pokemons or pairs."),t.a.createElement(c.b,{type:"button",icon:"confirm",className:u.a.GetStartedButton,onClick:function(){return e.push("/register")}},"Get Started")))},p=a(18),v=a.n(p),g=a(31),N=a(17),b=a(11),f=a(19),S=a(57),E=a(413),h=a(212),_=a(16),y=a(32),O=a(410),F=a(411),P=a(412),I=function(e){var n=e.form,a=e.field,r=e.type,o=void 0===r?"text":r,l=e.helperText,m=e.labelInfo,d=e.label,s=e.className,u=e.checkboxLabel,k=Object(y.a)(e,["form","field","type","helperText","labelInfo","label","className","checkboxLabel"]),p=Object(i.useState)(!1),v=Object(N.a)(p,2),g=v[0],b=v[1],f=n.touched,E=n.errors,h=n.setFieldValue,_=t.a.createElement(c.b,{icon:g?"unlock":"lock",intent:S.a.WARNING,minimal:!0,onClick:function(){return b(!g)}});return t.a.createElement(O.a,{label:d,className:s,labelInfo:m,helperText:f[a.name]&&E[a.name]?E[a.name]:l,labelFor:a.name,intent:f[a.name]&&E[a.name]?"danger":"none"},"checkbox"===o?t.a.createElement(F.a,{checked:a.value,className:s,label:u,onChange:function(e){return h(a.name,e.target.checked)}}):"password"===o?t.a.createElement(P.a,Object.assign({type:g?"text":"password",value:a.value,rightElement:_,id:a.name,onChange:function(e){return h(a.name,e.target.value)}},k)):t.a.createElement(P.a,Object.assign({type:o,value:a.value,id:a.name,onChange:function(e){return h(a.name,e.target.value)}},k)))},j=a(194),w=a.n(j),D="",L=function(){return D},T=function(e){return D=e},z=function(e){if(!e)return!1;try{var n=w()(e).exp;return Date.now()>=1e3*n}catch(a){return!1}},C=t.a.createContext(null),A=L(),x=C,V=a(129),q=a.n(V),G={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"Login"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"LoginInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"login"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"token"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenExpiration"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:106,source:{body:"mutation Login($input: LoginInput!) {\n\tlogin(input: $input) {\n\t\tuserId\n    token\n    tokenExpiration\n\t}\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},R=function(){var e=Object(i.useState)(!1),n=Object(N.a)(e,2),a=n[0],r=n[1],o=Object(i.useContext)(x).onLogin,l=Object(f.b)(G,{errorPolicy:"all"}),s=Object(N.a)(l,2),u=s[0],k=s[1].loading,p=Object(d.g)(),y=t.a.createElement(c.b,{icon:"envelope",intent:S.a.WARNING,minimal:!0});return t.a.createElement("div",{className:q.a.LoginPage},t.a.createElement(b.c,{initialValues:{email:"",password:""},validationSchema:_.object().shape({email:_.string().required().label("this"),password:_.string().required().label("this")}),onSubmit:function(){var e=Object(g.a)(v.a.mark((function e(n){var a;return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({variables:{input:n}}).catch((function(e){return r(!0)}));case 2:(a=e.sent)&&(o(a.data.login.token),p.push("/profile/".concat(a.data.login.userId)));case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()},(function(){return t.a.createElement(b.b,{className:q.a.LoginForm},t.a.createElement("h1",null,"Login"),t.a.createElement(b.a,{name:"email",placeholder:"email",rightElement:y,component:I}),t.a.createElement(b.a,{name:"password",type:"password",placeholder:"password",component:I}),t.a.createElement(c.b,{loading:k,type:"submit"},"Submit"))})),a&&t.a.createElement(E.a,{position:"top"},t.a.createElement(h.a,{intent:"danger",message:"An error has occurred",onDismiss:function(){return r(!1)}})),t.a.createElement(m.b,{to:"/register"},"Don't have an account?"))},U=a(416),$=a(50),B=a.n($),M=a(198),Q=a(15),H=function(e){var n=e.nuzlocke,a=n.pokemons.filter((function(e){return"IN_TEAM"===e.status}));return t.a.createElement(m.b,{to:"/nuzlocke/".concat(n._id)},t.a.createElement("div",{className:B.a.NuzlockePreview},n.name&&t.a.createElement("h4",null,n.name),t.a.createElement("span",null,"Pokemon ",n.game.name),t.a.createElement("div",{className:B.a.TeamSprites},a.length>0?a.map((function(e){return t.a.createElement(M.a,{key:e.pokemon._id,content:e.nickname||e.pokemon.name,position:Q.a.TOP},t.a.createElement("img",{src:e.pokemon.sprite,alt:"".concat(e.pokemon.name)}))})):t.a.createElement("span",null,"Click here to add pokemons to your team"))))},K=a(104),W=a(45),Y=a(415),J=a(414),Z=a(6),X=a.n(Z),ee=a(201),ne=a.n(ee),ae=function(e){var n=e.id,a=e.field,i=e.form,r=e.options,o=e.className,l=(e.isMulti,e.placeholder),m=e.helperText,d=e.label,c=e.labelInfo,s=Object(y.a)(e,["id","field","form","options","className","isMulti","placeholder","helperText","label","labelInfo"]),u=i.touched,k=i.errors,p=i.setFieldValue;return t.a.createElement(O.a,{label:d,labelInfo:c,labelFor:n||a.name,helperText:u[a.name]&&k[a.name]?k[a.name]:m,intent:u[a.name]&&k[a.name]?"danger":"none"},t.a.createElement(J.a,Object.assign({id:n||a.name,className:X()(ne.a.Select,o),name:a.name,value:a.value,onChange:function(e){return p(a.name,e.target.value)}},s),l&&t.a.createElement("option",{value:""},l),r.map((function(e){return t.a.createElement("option",{key:e.value,value:e.value},e.label)}))))},ie=a(53);function te(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function re(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?te(a,!0).forEach((function(n){Object(W.a)(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):te(a).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}var oe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetGames"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"games"},name:{kind:"Name",value:"getGames"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:59,source:{body:"query GetGames {\n  games: getGames {\n    id\n    name\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},le={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetUser"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"user"},name:{kind:"Name",value:"getUser"},arguments:[{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nuzlockes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"game"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pokemons"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemon"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nickname"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:365,source:{body:"query GetUser($userId: ID!) {\n  user: getUser(userId: $userId) {\n    id\n    name\n    nuzlockes {\n      _id\n      name\n      game {\n        id\n        name\n      }\n      pokemons {\n        _id\n        pokemon {\n          _id\n          name\n          sprite\n          image\n        }\n        location\n        nickname\n        status\n        level\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},me={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"CreateNuzlocke"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"NuzlockeInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createNuzlocke"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"game"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pokemons"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemon"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nickname"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:299,source:{body:"mutation CreateNuzlocke($input: NuzlockeInput!) {\n  createNuzlocke(input: $input) {\n    _id\n    name\n    game {\n      name\n    }\n    pokemons {\n      _id\n      pokemon {\n        _id\n        name\n        sprite\n        image\n      }\n      location\n      nickname\n      status\n      level\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},de=[{value:"NORMAL",label:"Normal"},{value:"CAGELOCKE",label:"Cagelocke"},{value:"SOUL_LINK",label:"Soul Link"}],ce=function(e){var n=e.onClose,a=e.isOpen,i=Object(d.h)().userId,r=Object(f.c)(oe),o=r.data,l=r.loading,m=Object(f.b)(me,{update:function(e,n){var a=n.data.createNuzlocke,t=e.readQuery({query:le,variables:{userId:i}});e.writeQuery({query:le,data:{user:re({},t.user,{nuzlockes:[].concat(Object(K.a)(t.user.nuzlockes),[a])})}})}}),s=Object(N.a)(m,2),u=s[0],k=s[1].loading;if(l||!o)return null;var p=o.games.map((function(e){return{value:e.id,label:e.name}})).sort((function(e,n){return e.value-n.value}));return t.a.createElement(Y.a,{isOpen:a,onClose:n,title:"Add New Nuzlocke"},t.a.createElement(b.c,{initialValues:{game:"",name:"",type:""},validationSchema:_.object().shape({game:_.number().nullable().required("You need to choose a game"),name:_.string(),type:_.string().nullable().required("You need to choose a type")}),onSubmit:function(){var e=Object(g.a)(v.a.mark((function e(a){var t,r;return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=a.game,r=Object(y.a)(a,["game"]),e.next=3,u({variables:{input:re({},r,{game:Number(t),user:i})}});case 3:n();case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()},(function(){return t.a.createElement(b.b,{className:B.a.AddNuzlockeForm},t.a.createElement(b.a,{id:"game",name:"game",options:p,label:"Game",placeholder:"Select...",helperText:"Choose what game you will play",labelInfo:"(required)",component:ae}),t.a.createElement(b.a,{id:"name",name:"name",label:"Nuzlocke Title",helperText:"Custom title for your nuzlocke",placeholder:"Pokemon Red Randomizer Nuzlocke",labelInfo:"(optional)",component:I}),t.a.createElement(b.a,{id:"type",name:"type",label:"Nuzlocke Type",placeholder:"Select...",helperText:"What type of nuzlocke you will play",labelInfo:"(required)",options:de,component:ae}),t.a.createElement(c.b,{icon:ie.b,type:"submit",intent:"primary",loading:k},"Create Nuzlocke"))})))},se={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetUser"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"user"},name:{kind:"Name",value:"getUser"},arguments:[{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nuzlockes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"game"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pokemons"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemon"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nickname"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:365,source:{body:"query GetUser($userId: ID!) {\n  user: getUser(userId: $userId) {\n    id\n    name\n    nuzlockes {\n      _id\n      name\n      game {\n        id\n        name\n      }\n      pokemons {\n        _id\n        pokemon {\n          _id\n          name\n          sprite\n          image\n        }\n        location\n        nickname\n        status\n        level\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},ue=function(){var e=Object(i.useState)(!1),n=Object(N.a)(e,2),a=n[0],r=n[1],o=Object(d.h)().userId,l=Object(f.c)(se,{variables:{userId:o}}),m=l.loading,s=l.data;if(m||!s)return t.a.createElement(U.a,null);var u=s.user;return t.a.createElement("div",{className:B.a.Profile},t.a.createElement("h1",null,"Welcome ",u.name),t.a.createElement("h3",null,"My Nuzlockes"),t.a.createElement("div",{className:B.a.MyNuzlockes},u.nuzlockes.length>0?u.nuzlockes.map((function(e){return t.a.createElement(H,{key:e._id,nuzlocke:e})})):t.a.createElement("span",null,"You don't have any nuzlockes yet")),t.a.createElement(c.b,{onClick:function(){return r(!0)},className:B.a.AddButton,large:!0,icon:ie.a},"Add New Nuzlocke"),t.a.createElement(ce,{isOpen:a,onClose:function(){return r(!1)}}))},ke=a(37),pe=a(417),ve=a(190),ge=a(213),Ne=a(418),be=a(202),fe=a.n(be),Se=Ne.a.ofType(),Ee=function(e){e.id;var n=e.field,a=e.form,i=e.options,r=(e.className,e.label),o=e.helperText,l=e.labelInfo,m=e.placeholder,d=Object(y.a)(e,["id","field","form","options","className","label","helperText","labelInfo","placeholder"]),s=a.touched,u=a.errors,k=a.setFieldValue,p=i.find((function(e){return e.value===n.value}));return t.a.createElement(O.a,{label:r,labelInfo:l,labelFor:n.name,helperText:s[n.name]&&u[n.name]?u[n.name]:o,intent:s[n.name]&&u[n.name]?"danger":"none"},t.a.createElement(Se,Object.assign({items:i,itemPredicate:function(e,n){return n.label.toLowerCase().indexOf(e.toLowerCase())>=0},itemRenderer:function(e,n){var a=n.handleClick,i=n.modifiers;return t.a.createElement(ge.a,{key:e.value,icon:e.icon&&t.a.createElement("img",{className:fe.a.ItemIcon,src:e.icon,alt:e.name}),active:i.active,label:e.label,onClick:a,text:e.query})},noResults:t.a.createElement(ge.a,{disabled:!0,text:"No results."}),activeItem:p,onItemSelect:function(e){return k(n.name,e.value)}},d),t.a.createElement(c.b,{text:p?p.label:m,rightIcon:"double-caret-vertical"})))},he=a(10),_e=a.n(he);function ye(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function Oe(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?ye(a,!0).forEach((function(n){Object(W.a)(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ye(a).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}var Fe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"AddPokemonData"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"regionId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"gameId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"pokemons"},name:{kind:"Name",value:"getPokemons"},arguments:[{kind:"Argument",name:{kind:"Name",value:"game"},value:{kind:"Variable",name:{kind:"Name",value:"gameId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]}]}},{kind:"Field",alias:{kind:"Name",value:"region"},name:{kind:"Name",value:"getRegion"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"regionId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"locations"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:201,source:{body:"query AddPokemonData($regionId: Int!, $gameId: Int!) {\n  pokemons: getPokemons(game: $gameId) {\n    _id\n    name\n    sprite\n  }\n  region: getRegion(id: $regionId) {\n    id\n    name\n    locations\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},Pe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"AddPokemon"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pokemon"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"NuzlockePokemonInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addPokemon"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"pokemon"},value:{kind:"Variable",name:{kind:"Name",value:"pokemon"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemons"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemon"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"partner"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nickname"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:364,source:{body:"mutation AddPokemon($id: ID!, $pokemon: NuzlockePokemonInput!) {\n  addPokemon(id: $id, pokemon: $pokemon) {\n    _id\n    pokemons {\n      _id\n      pokemon {\n        _id\n        name\n        sprite\n        image\n      }\n      partner {\n        _id\n        name\n        sprite\n        image\n      }\n      location\n      nickname\n      status\n      level\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},Ie=function(e){var n=e.isOpen,a=e.onClose,i=e.regionId,r=e.nuzlocke,o=e.gameId,l=Object(f.c)(Fe,{variables:{regionId:i,gameId:o},skip:!n}),m=l.data,d=l.loading,s=Object(f.b)(Pe),u=Object(N.a)(s,2),k=u[0],p=u[1].loading;if(d||!m)return t.a.createElement(pe.a,{isOpen:n,onClose:a,className:_e.a.AddNewPokemon,title:"Enter Encounter Details"},t.a.createElement("div",{className:_e.a.AddNewPokemonContainer},t.a.createElement(ve.a,null)));var S=m.pokemons,E=m.region;return t.a.createElement(pe.a,{isOpen:n,onClose:a,className:_e.a.AddNewPokemon,title:"Enter Encounter Details"},t.a.createElement("div",{className:_e.a.AddNewPokemonContainer},t.a.createElement(b.c,{initialValues:{location:"",customLocation:"",pokemon:"",partner:"",nickname:"",status:"",isLocationCustom:!1},validationSchema:_.object().shape({pokemon:_.string().required().label("This"),status:_.string().required().label("This"),location:_.string().when("isLocationCustom",{is:!1,then:_.string().required().label("This"),otherwise:_.string()}),customLocation:_.string().when("isLocationCustom",{is:!0,then:_.string().required().label("This"),otherwise:_.string()})}),onSubmit:function(){var e=Object(g.a)(v.a.mark((function e(n){var i,t,o,l;return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=n.isLocationCustom,t=n.customLocation,o=n.location,l=Object(y.a)(n,["isLocationCustom","customLocation","location"]),e.next=3,k({variables:{id:r._id,pokemon:Oe({},l,{location:i?t:o,partner:"SOUL_LINK"===r.type?l.partner:null})}});case 3:a();case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()},(function(e){var n=e.values;return t.a.createElement(b.b,null,t.a.createElement("div",{className:_e.a.AddNewPokemonForm},t.a.createElement(b.a,{id:"pokemon",name:"pokemon",label:"Select a Pokemon",component:Ee,initialContent:null,placeholder:"Search Pokemon",options:S.map((function(e){return{value:e._id,label:e.name,icon:e.sprite}}))}),"SOUL_LINK"===r.type&&t.a.createElement(b.a,{id:"partner",name:"partner",label:"Select a soulink partner",component:Ee,initialContent:null,placeholder:"Search Pokemon",options:S.map((function(e){return{value:e._id,label:e.name,icon:e.sprite}}))}),t.a.createElement("div",{className:_e.a.LocationFields},n.isLocationCustom?t.a.createElement(b.a,{id:"customLocation",name:"customLocation",className:_e.a.CustomLocationInput,label:"Enter Location",component:I,placeholder:"Input Location"}):t.a.createElement(b.a,{id:"location",name:"location",label:"Select a Location",component:Ee,initialContent:null,placeholder:"Search",options:E.locations.map((function(e){return{label:e.replace(/-/g," "),value:e}}))}),t.a.createElement(b.a,{id:"isLocationCustom",className:_e.a.LocationCheckbox,checkboxLabel:"Custom Location",name:"isLocationCustom",type:"checkbox",component:I})),t.a.createElement(b.a,{id:"status",name:"status",component:Ee,label:"Status",placeholder:"Select a Status",options:[{value:"IN_TEAM",label:"in team"},{value:"IN_PC",label:"in pc"},{value:"SEEN",label:"seen"},{value:"DEAD",label:"Dead"}]}),("IN_TEAM"===n.status||"IN_PC"===n.status)&&t.a.createElement(b.a,{id:"nickname",name:"nickname",className:_e.a.NicknameInput,label:"Enter Pokemon nickname",component:I,placeholder:"Pebbles"})),t.a.createElement(c.b,{className:_e.a.SubmitButton,icon:ie.a,type:"submit",loading:p},"Add"))}))))},je=function(e){var n=e.pokemons,a=e.nuzlockeType,i=e.selectPokemon;return t.a.createElement(ke.c,{droppableId:"IN_TEAM"},(function(e){return t.a.createElement("div",Object.assign({className:_e.a.Team,ref:e.innerRef},e.droppableProps),t.a.createElement("h2",null,"Team"),t.a.createElement("div",{className:X()(_e.a.TeamGrid,Object(W.a)({},_e.a.empty,n.length<1))},n.length>0?n.map((function(e,n){return t.a.createElement(M.a,{key:e._id,className:_e.a.TooltipWrapper,content:"SOUL_LINK"===a?t.a.createElement("img",{className:_e.a.PartnerImage,src:e.partner.sprite,alt:e.partner.name}):e.nickname?e.nickname:e.pokemon.name,position:Q.a.TOP},t.a.createElement(ke.b,{draggableId:e._id,index:n},(function(n){return t.a.createElement("div",Object.assign({className:_e.a.TeamPokemon},n.draggableProps,n.dragHandleProps,{ref:n.innerRef,onClick:function(){return i({isOpen:!0,pokemon:e})}}),t.a.createElement("img",{src:e.pokemon.image,alt:e.pokemon.name}))})))})):t.a.createElement("span",null,"No mons in the team")),e.placeholder)}))};var we=function(e){var n=e.pokemons,a=e.selectPokemon;return t.a.createElement(ke.c,{droppableId:"IN_PC"},(function(e){return t.a.createElement("div",Object.assign({className:_e.a.InPc,ref:e.innerRef},e.droppableProps),t.a.createElement("h2",null,"In PC"),t.a.createElement("div",null,n.length>0?n.map((function(e,n){return t.a.createElement(M.a,{key:e._id,content:e.nickname?e.nickname:e.pokemon.name,position:Q.a.TOP},t.a.createElement(ke.b,{draggableId:e._id,index:n},(function(n){return t.a.createElement("div",Object.assign({},n.draggableProps,n.dragHandleProps,{ref:n.innerRef,onClick:function(){return a({isOpen:!0,pokemon:e})}}),t.a.createElement("img",{src:e.pokemon.sprite,alt:e.pokemon.name}))})))})):t.a.createElement("span",null,"No pokemon in pc")),e.placeholder)}))};var De=function(e){var n=e.pokemons,a=e.selectPokemon;return t.a.createElement(ke.c,{droppableId:"DEAD"},(function(e){return t.a.createElement("div",Object.assign({ref:e.innerRef},e.droppableProps),t.a.createElement("h2",null,"RIP"),t.a.createElement("div",null,n.length>0?n.map((function(e,n){return t.a.createElement(M.a,{key:e._id,content:e.nickname?e.nickname:e.pokemon.name,position:Q.a.TOP},t.a.createElement(ke.b,{draggableId:e._id,index:n},(function(n){return t.a.createElement("div",Object.assign({},n.draggableProps,n.dragHandleProps,{ref:n.innerRef,onClick:function(){return a({isOpen:!0,pokemon:e})}}),t.a.createElement("img",{src:e.pokemon.sprite,alt:e.pokemon.name}))})))})):t.a.createElement("span",null,"Impressive, no dead mons")),e.placeholder)}))};var Le=function(e){var n=e.pokemons,a=e.selectPokemon;return t.a.createElement(ke.c,{droppableId:"SEEN"},(function(e){return t.a.createElement("div",Object.assign({className:_e.a.Seen,ref:e.innerRef},e.droppableProps),t.a.createElement("h2",null,"Not Caugth"),t.a.createElement("div",{className:_e.a.EncounterList},n.length>0?n.map((function(e,n){return t.a.createElement("div",{key:e._id,className:_e.a.SeenPokemon},t.a.createElement(M.a,{key:e._id,content:e.nickname?e.nickname:e.pokemon.name,position:Q.a.TOP},t.a.createElement(ke.b,{draggableId:e._id,index:n},(function(n){return t.a.createElement("img",Object.assign({},n.draggableProps,n.dragHandleProps,{ref:n.innerRef,onClick:function(){return a({isOpen:!0,pokemon:e})},src:e.pokemon.sprite,alt:e.pokemon.name}))}))))})):t.a.createElement("span",null,"No encounters yet")))}))};function Te(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function ze(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?Te(a,!0).forEach((function(n){Object(W.a)(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Te(a).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}var Ce={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"AddPokemonData"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"regionId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"gameId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"pokemons"},name:{kind:"Name",value:"getPokemons"},arguments:[{kind:"Argument",name:{kind:"Name",value:"game"},value:{kind:"Variable",name:{kind:"Name",value:"gameId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]}]}},{kind:"Field",alias:{kind:"Name",value:"region"},name:{kind:"Name",value:"getRegion"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"regionId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"locations"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:201,source:{body:"query AddPokemonData($regionId: Int!, $gameId: Int!) {\n  pokemons: getPokemons(game: $gameId) {\n    _id\n    name\n    sprite\n  }\n  region: getRegion(id: $regionId) {\n    id\n    name\n    locations\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},Ae={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdatePokemonStatus"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pokemon"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"NuzlockePokemonInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updatePokemon"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"pokemon"},value:{kind:"Variable",name:{kind:"Name",value:"pokemon"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemons"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemon"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"partner"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nickname"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:376,source:{body:"mutation UpdatePokemonStatus($id: ID!, $pokemon: NuzlockePokemonInput!) {\n  updatePokemon(id: $id, pokemon: $pokemon) {\n    _id\n    pokemons {\n      _id\n      pokemon {\n        _id\n        name\n        sprite\n        image\n      }\n      partner {\n        _id\n        name\n        sprite\n        image\n      }\n      location\n      nickname\n      status\n      level\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},xe=function(e){var n=e.pokemon,a=e.nuzlocke,i=e.regionId,r=e.onClose,o=e.gameId,l=e.isOpen,m=Object(f.c)(Ce,{variables:{regionId:i,gameId:o},skip:!l}),d=m.data,s=m.loading,u=Object(f.b)(Ae),k=Object(N.a)(u,2),p=k[0],S=k[1].loading;return n?t.a.createElement(Y.a,{isOpen:l,onClose:r,size:Y.a.SIZE_SMALL,title:"Edit Pokemon"},s||!d?t.a.createElement("div",{className:_e.a.EditPokemonForm},t.a.createElement(ve.a,null)):t.a.createElement(b.c,{initialValues:{id:n._id,nickname:n.nickname,location:n.location,status:n.status,partner:"SOUL_LINK"===a.type?n.partner._id:null},onSubmit:function(){var e=Object(g.a)(v.a.mark((function e(i){return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,p({variables:{id:a._id,pokemon:ze({id:n._id,pokemon:n.pokemon._id},i)}});case 2:r();case 3:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()},(function(){return t.a.createElement(b.b,{className:_e.a.EditPokemonForm},t.a.createElement("img",{src:n.pokemon.image,alt:"pokemon"}),t.a.createElement(b.a,{id:"nickname",name:"nickname",label:"Nickname",component:I}),t.a.createElement(b.a,{id:"location",name:"location",label:"Location",component:I}),t.a.createElement(b.a,{id:"status",name:"status",component:Ee,label:"Status",placeholder:"Select a Status",options:[{value:"IN_TEAM",label:"in team"},{value:"IN_PC",label:"in pc"},{value:"SEEN",label:"seen"},{value:"DEAD",label:"Dead"}]}),"SOUL_LINK"===a.type&&t.a.createElement(b.a,{id:"partner",name:"partner",label:"Soulink partner",component:Ee,initialContent:null,options:d.pokemons.map((function(e){return{value:e._id,label:e.name,icon:e.sprite}}))}),t.a.createElement(c.b,{type:"submit",intent:"success",loading:S,large:!0,rightIcon:"floppy-disk"},"Save"))}))):null},Ve=function(e){var n=e.isOpen,a=e.onClose,i=e.pokemons;return t.a.createElement(Y.a,{isOpen:n,onClose:a,size:Y.a.SIZE_SMALL,title:"Encounters"},t.a.createElement("div",{className:_e.a.Encounters},i.map((function(e){return t.a.createElement("div",{key:e._id,className:_e.a.Encounter},t.a.createElement(M.a,{key:e._id,content:e.nickname?e.nickname:e.pokemon.name,position:"top"},t.a.createElement("img",{src:e.pokemon.sprite,alt:e.nickname||e.pokemon.name})),t.a.createElement("span",null,e.location))}))))};function qe(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function Ge(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?qe(a,!0).forEach((function(n){Object(W.a)(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):qe(a).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}var Re={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetNuzlocke"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"nuzlocke"},name:{kind:"Name",value:"getNuzlocke"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"game"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"region"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"locations"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"pokemons"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemon"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"partner"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nickname"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"deaths"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:475,source:{body:"query GetNuzlocke($id: ID!) {\n  nuzlocke: getNuzlocke(id: $id) {\n    _id\n    type\n    name\n    game {\n      id\n      name\n      region {\n        id\n        locations\n      }\n    }\n    pokemons {\n      _id\n      pokemon {\n        _id\n        name\n        sprite\n        image\n      }\n      partner {\n        _id\n        name\n        sprite\n        image\n      }\n      location\n      nickname\n      status\n      level\n    }\n    user {\n      id\n    }\n    score\n    deaths\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},Ue={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdatePokemonStatus"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pokemon"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"NuzlockePokemonInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updatePokemon"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"pokemon"},value:{kind:"Variable",name:{kind:"Name",value:"pokemon"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemons"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pokemon"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"partner"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sprite"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nickname"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:376,source:{body:"mutation UpdatePokemonStatus($id: ID!, $pokemon: NuzlockePokemonInput!) {\n  updatePokemon(id: $id, pokemon: $pokemon) {\n    _id\n    pokemons {\n      _id\n      pokemon {\n        _id\n        name\n        sprite\n        image\n      }\n      partner {\n        _id\n        name\n        sprite\n        image\n      }\n      location\n      nickname\n      status\n      level\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},$e=function(){var e=Object(i.useState)(!1),n=Object(N.a)(e,2),a=n[0],r=n[1],o=Object(i.useState)(!1),l=Object(N.a)(o,2),m=l[0],s=l[1],u=Object(i.useState)({isOpen:!1,pokemon:null}),k=Object(N.a)(u,2),p=k[0],b=k[1],S=Object(d.h)().nuzlockeId,E=Object(d.g)(),h=Object(f.c)(Re,{variables:{id:S}}),_=h.data,O=h.loading,F=Object(f.b)(Ue),P=Object(N.a)(F,1)[0];if(O||!_)return t.a.createElement(U.a,null);var I=_.nuzlocke,j=function(){var e=Object(g.a)(v.a.mark((function e(n){var a,i,t,r,o,l,m,d;return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=n.draggableId,i=n.destination,a&&i){e.next=3;break}return e.abrupt("return");case 3:return t=I.pokemons.find((function(e){return e._id===a})),r=t.pokemon,o=t.partner,l=t._id,t.status,m=t.__typename,d=Object(y.a)(t,["pokemon","partner","_id","status","__typename"]),e.next=6,P({variables:{id:I._id,pokemon:Ge({id:l,pokemon:r._id,partner:o?o._id:null,status:i.droppableId},d)},optimisticResponse:{__typename:"Mutation",updatePokemon:Ge({},I,{pokemons:[].concat(Object(K.a)(I.pokemons.filter((function(e){return e._id!==l}))),[Ge({_id:l,pokemon:r,partner:o,__typename:m,status:i.droppableId},d)])})}});case 6:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),w=I.pokemons.filter((function(e){return"IN_TEAM"===e.status})),D=I.pokemons.filter((function(e){return"IN_PC"===e.status})),L=I.pokemons.filter((function(e){return"DEAD"===e.status})),T=I.pokemons.filter((function(e){return"SEEN"===e.status}));return t.a.createElement("div",{className:_e.a.Nuzlocke},t.a.createElement(c.b,{className:_e.a.BackButton,onClick:function(){return E.push("/profile/".concat(I.user.id))},icon:"step-backward",minimal:!0},"Back to Profile"),t.a.createElement("div",{className:_e.a.Header},t.a.createElement("h1",null,I.name),t.a.createElement(c.b,{onClick:function(){return s(!0)},large:!0,minimal:!0,intent:"primary",rightIcon:"compass"},"All Encounters")),t.a.createElement("h2",null,I.game.name),t.a.createElement("span",null,function(e){switch(e){case"NORMAL":return"Normal";case"CAGELOCKE":return"Cagelocke";case"SOUL_LINK":return"Soul Link";default:return null}}(I.type)),t.a.createElement("div",{className:_e.a.Pokemons},t.a.createElement(ke.a,{onDragEnd:j},t.a.createElement(je,{pokemons:w,nuzlockeType:I.type,selectPokemon:b}),t.a.createElement(we,{pokemons:D,selectPokemon:b}),t.a.createElement(De,{pokemons:L,selectPokemon:b}),t.a.createElement(Le,{pokemons:T,selectPokemon:b}))),t.a.createElement(c.b,{rightIcon:ie.a,intent:"primary",onClick:function(){return r(!0)},large:!0},"Add Pokemon"),t.a.createElement(Ie,{isOpen:a,onClose:function(){return r(!1)},regionId:I.game.region.id,gameId:I.game.id,nuzlocke:I}),t.a.createElement(xe,{isOpen:p.isOpen,pokemon:p.pokemon,regionId:I.game.region.id,gameId:I.game.id,nuzlocke:I,onClose:function(){return b({isOpen:!1,pokemon:null})}}),t.a.createElement(Ve,{isOpen:m,onClose:function(){return s(!1)},pokemons:I.pokemons}))},Be=a(132),Me=a.n(Be),Qe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"SignUp"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SignUpInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signUp"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"token"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenExpiration"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:113,source:{body:"mutation SignUp($input: SignUpInput!) {\n  signUp(input: $input) {\n    userId\n    token\n    tokenExpiration\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},He=function(){var e=Object(i.useState)(!1),n=Object(N.a)(e,2),a=n[0],r=n[1],o=Object(f.b)(Qe),l=Object(N.a)(o,2),s=l[0],u=l[1].loading,k=Object(d.g)(),p=t.a.createElement(c.b,{icon:"envelope",intent:S.a.WARNING,minimal:!0}),O=t.a.createElement(c.b,{icon:"user",intent:S.a.WARNING,minimal:!0});return t.a.createElement("div",{className:Me.a.Register},t.a.createElement(b.c,{initialValues:{name:"",email:"",password:"",repeatPassword:""},validationSchema:_.object().shape({name:_.string().required().label("This"),email:_.string().email().required().label("This"),password:_.string().required().label("This"),repeatPassword:_.string().required().test("passwords-match","Passwords should match",(function(e){return this.parent.password===e})).label("This")}),onSubmit:function(){var e=Object(g.a)(v.a.mark((function e(n){var a,i;return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.repeatPassword,a=Object(y.a)(n,["repeatPassword"]),e.next=3,s({variables:{input:a}}).catch((function(e){return r(!0)}));case 3:(i=e.sent)&&(T(i.data.signUp.token),k.push("/profile/".concat(i.data.signUp.userId)));case 5:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()},(function(){return t.a.createElement(b.b,{className:Me.a.RegisterForm},t.a.createElement("h1",null,"Register"),t.a.createElement(b.a,{name:"name",component:I,rightElement:O,placeholder:"pokemon trainer name"}),t.a.createElement(b.a,{name:"email",component:I,rightElement:p,rigth:!0,placeholder:"email"}),t.a.createElement(b.a,{name:"password",type:"password",placeholder:"password",component:I}),t.a.createElement(b.a,{name:"repeatPassword",type:"password",placeholder:"confirm password",component:I}),t.a.createElement(c.b,{type:"submit",rightIcon:"arrow-right",fill:!0,loading:u},"Sign Up"),a&&t.a.createElement(E.a,{position:"top"},t.a.createElement(h.a,{intent:"danger",message:"An error has occurred",onDismiss:function(){return r(!1)}})))})),t.a.createElement(m.b,{to:"/login"},"Already have an account?"))},Ke=function(e){var n=e.path,a=e.children;return Object(i.useContext)(x).isAuthenticated?t.a.createElement(d.b,{path:n},a):t.a.createElement(d.a,{to:"/login"})},We={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetCurrentUser"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"user"},name:{kind:"Name",value:"getCurrentUser"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:61,source:{body:"query GetCurrentUser {\n  user: getCurrentUser {\n    id\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},Ye=function(e){var n=e.path,a=e.children,r=Object(y.a)(e,["path","children"]),o=Object(i.useContext)(x).isAuthenticated,l=Object(f.c)(We,{skip:!o}),m=l.data,c=l.loading;return o?c?t.a.createElement(U.a,null):t.a.createElement(d.a,{to:"/profile/".concat(m.user.id)}):t.a.createElement(d.b,Object.assign({path:n},r),a)},Je=function(){return t.a.createElement(m.a,null,t.a.createElement(d.d,null,t.a.createElement(Ye,{exact:!0,path:"/"},t.a.createElement(k,null)),t.a.createElement(Ye,{path:"/register"},t.a.createElement(He,null)),t.a.createElement(Ye,{path:"/login"},t.a.createElement(R,null)),t.a.createElement(Ke,{path:"/profile/:userId"},t.a.createElement(ue,null)),t.a.createElement(Ke,{path:"/nuzlocke/:nuzlockeId"},t.a.createElement($e,null))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var Ze=a(58),Xe=a(209),en=a(208),nn=a(207),an=a(28),tn=a(30),rn=a(211),on=function(){var e=Object(g.a)(v.a.mark((function e(n){var a;return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=L(),n.setContext({headers:{authorization:"Bearer ".concat(a)}});case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),ln=new an.a((function(e,n){return new tn.a((function(a){var i;return Promise.resolve(e).then((function(e){return on(e)})).then((function(){i=n(e).subscribe({next:a.next.bind(a),error:a.error.bind(a),complete:a.complete.bind(a)})})).catch(a.error.bind(a)),function(){i&&i.unsubscribe()}}))})),mn=new Ze.a({link:an.a.from([new rn.a({accessTokenField:"accessToken",isTokenValidOrUndefined:function(){var e=L();return!z(e)},fetchAccessToken:function(){return fetch("http://localhost:4000/refresh-token",{method:"POST",credentials:"include"})},handleFetch:function(e){T(e)},handleError:function(e){console.warn("Your refresh token is invalid. Try to relogin"),console.error(e)}}),Object(nn.a)((function(e){var n=e.graphQLErrors,a=e.networkError;n&&n.forEach((function(e){var n=e.message,a=e.locations,i=e.path;return console.log("[GraphQL error]: Message: ".concat(n,", Location: ").concat(a,", Path: ").concat(i))})),a&&console.log("[Network error]: ".concat(a))})),ln,new en.a({uri:"http://localhost:4000/graphql",credentials:"include"})]),cache:new Xe.a});a(403),a(404),a(405),a(406);o.a.render(t.a.createElement(l.a,{client:mn},t.a.createElement((function(e){var n=e.children,a=Object(i.useState)(z(A)),r=Object(N.a)(a,2),o=r[0],l=r[1],m=Object(i.useState)(!0),d=Object(N.a)(m,2),c=d[0],s=d[1],u=Object(f.a)();Object(i.useEffect)((function(){o||fetch("http://localhost:4000/refresh-token",{method:"POST",credentials:"include"}).then(function(){var e=Object(g.a)(v.a.mark((function e(n){var a;return v.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.json();case 2:if((a=e.sent).ok){e.next=7;break}return s(!1),l(!1),e.abrupt("return");case 7:T(a.accessToken),l(!0),s(!1);case 10:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}())}),[o]);var k=Object(i.useMemo)((function(){return{isAuthenticated:o,onLogin:function(e){T(e),l(!0)},onLogout:function(){u.resetStore(),l(!1)}}}),[u,o]);return c?null:t.a.createElement(C.Provider,{value:k},n)}),null,t.a.createElement(Je,null))),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))},50:function(e,n,a){e.exports={Profile:"Profile_Profile__3EVGC",MyNuzlockes:"Profile_MyNuzlockes__D6tGx",NuzlockePreview:"Profile_NuzlockePreview__1zeP6",TeamSprites:"Profile_TeamSprites__In0kG",AddButton:"Profile_AddButton__2SNpK",AddNuzlockeForm:"Profile_AddNuzlockeForm__ZPHLH"}},81:function(e,n,a){e.exports={Home:"Home_Home__1ihTB",LoginButton:"Home_LoginButton__37Wd1",ActionBox:"Home_ActionBox__3QffN",GetStartedButton:"Home_GetStartedButton__36-MJ"}}},[[218,1,2]]]);
//# sourceMappingURL=main.aaf239e2.chunk.js.map